openapi: 3.0.1
servers:
  - url: http://localhost:8080/
    description: Generated server url
tags:
  - name: /v1/conversations
    description: Conversations V1 implementation
  - name: /v1/messages
    description: Messages V1 implementation
  - name: /v2/messages
    description: Messages V2 implementation
  - name: /v2/conversations
    description: Conversations V2 implementation
paths:
  /v2/conversations/close/name:
    put:
      tags:
        - /v2/conversations
      operationId: closeConversation
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /v2/conversations/close/id:
    put:
      tags:
        - /v2/conversations
      operationId: closeConversationById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /v1/conversations/close/name:
    put:
      tags:
        - /v1/conversations
      operationId: closeConversationByUser
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /v1/conversations/close/id:
    put:
      tags:
        - /v1/conversations
      operationId: closeConversationById_1
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /v2/messages:
    post:
      tags:
        - /v2/messages
      operationId: createMessagesV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessageV2'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageV2'
  /v1/messages:
    post:
      tags:
        - /v1/messages
      operationId: createMessagesV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageV1'
  /v2/conversations:
    get:
      tags:
        - /v2/conversations
      operationId: getAllConversations
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConversationV2'
  /v2/conversations/user/all:
    get:
      tags:
        - /v2/conversations
      operationId: getConversationsByUser
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConversationV2'
  /v2/conversations/user/active:
    get:
      tags:
        - /v2/conversations
      operationId: getActiveConversationByUser
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConversationV2'
  /v2/conversations/time-range:
    get:
      tags:
        - /v2/conversations
      operationId: getConversationsInTimeRange
      parameters:
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConversationV2'
  /v2/conversations/id:
    get:
      tags:
        - /v2/conversations
      operationId: getConversationById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConversationV2'
  /v1/conversations:
    get:
      tags:
        - /v1/conversations
      operationId: getAllConversations_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConversationV1'
  /v1/conversations/user/all:
    get:
      tags:
        - /v1/conversations
      operationId: getConversationsByUser_1
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConversationV1'
  /v1/conversations/user/active:
    get:
      tags:
        - /v1/conversations
      operationId: getActiveConversationByUser_1
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConversationV1'
  /v1/conversations/time-range:
    get:
      tags:
        - /v1/conversations
      operationId: getConversationsInTimeRange_1
      parameters:
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConversationV1'
  /v1/conversations/id:
    get:
      tags:
        - /v1/conversations
      operationId: getConversationById_1
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConversationV1'
  /health:
    get:
      tags:
        - /health
      operationId: health
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    NewContent:
      type: object
      properties:
        text:
          type: string
    NewMessageV2:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        displayName:
          type: string
        content:
          $ref: '#/components/schemas/NewContent'
    Content:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
    MessageV2:
      required:
        - displayName
        - from
        - to
      type: object
      properties:
        id:
          type: integer
          format: int64
        from:
          type: string
        to:
          type: string
        content:
          $ref: '#/components/schemas/Content'
        displayName:
          type: string
    Message:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        text:
          type: string
    MessageV1:
      required:
        - from
        - text
        - to
      type: object
      properties:
        id:
          type: integer
          format: int64
        from:
          type: string
        to:
          type: string
        text:
          type: string
    ConversationV2:
      type: object
      properties:
        id:
          type: integer
          format: int64
        participant1:
          type: string
        participant2:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageV2'
    ConversationV1:
      type: object
      properties:
        id:
          type: integer
          format: int64
        participant1:
          type: string
        participant2:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageV1'
